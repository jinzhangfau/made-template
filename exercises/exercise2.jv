pipeline trainstops {

    TrainstopsExtractor
         -> TrainstopsTextFileInterpreter
         -> TrainstopsCSVInterpreter
         -> TrainstopsTableInterpreter
         -> TrainstopsLoader;


    block TrainstopsExtractor oftype HttpExtractor{
        url: "https://download-data.deutschebahn.com/static/datasets/haltestellen/D_Bahnhof_2020_alle.CSV";
    }

    block TrainstopsTextFileInterpreter oftype TextFileInterpreter { }

    block TrainstopsCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }
   
    block TrainstopsTableInterpreter oftype TableInterpreter { 
        header: true;
        columns: [
            "EVA_NR" oftype integer,
            "DS100" oftype text,
            "IFOPT" oftype text,
            "NAME" oftype text,
            "Verkehr" oftype text,
            "Laenge" oftype decimal, //不确定类型e.g.8,7531
            "Breite" oftype decimal, //不确定类型e.g.48,4847
            "Betreiber_Name" oftype text,
            "Betreiber_Nr" oftype integer,
            // "Status" oftype text            
        ];        
    }

   // block StatusColumnDeleter oftype ColumnDeleter {
   //     delete: [column J];
   // }

    // Valid "Verkehr" values are "FV", "RV", "nur DPN"
    //valuetype Verkehr oftype text {
    //    constraints: [ VerkehrValue ];
    //}
    constraint VerkehrValue oftype AllowlistConstraint {
        allowlist: ["FV", "RV", "nur DPN"];
    }

    // Valid "Laenge", "Breite" values are geographic coordinate system values between and including -90 and 90
    constraint LaengeValue oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;
        upperBoundInclusive: true;
    }

    constraint BreiteValue oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;
        upperBoundInclusive: true;
    }

    // Valid "IFOPT" values follow this pattern: <exactly two characters>:<any amount of numbers>:<any amount of numbers><optionally another colon followed by any amount of numbers>
    constraint IFOTValue oftype RegexConstraint {
    //    regex: /^[a-z]{2}$:^[1-9]\d*|0$:^[1-9]\d*|0$^[:]?$/;
        regex: /^[a-z]{2}:[1-9]\d*|0:[1-9]\d*|0[:[1-9]\d*|0]?$/;
    }

    // Empty cells are considered invalid
    constraint IFOPT oftype LengthConstraint {
        minLength: 1;
    }
    constraint NAME oftype LengthConstraint {
        minLength: 1;
    }
    constraint Verkehr oftype LengthConstraint {
        minLength: 1;
    }
    constraint Betreiber_Name oftype LengthConstraint {
        minLength: 1;
    }

    block TrainstopsLoader oftype SQLiteLoader { 
        table: "trainstops";
        file: "./trainstops.sqlite";
    }


}


